#JWT Authentication Logs
log_format jwt '$remote_addr - $remote_user [$time_local] "$request" '
               '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
               '$jwt_header_alg $jwt_claim_uid $jwt_claim_url';

#Global Rate Limit set
limit_req_zone $remote_addr zone=perip:1m rate=1r/s;

upstream f1-api {
        zone api_endpoints 64k;

	#Load Balancing back-end APIs

        server 127.0.0.1:8001;
        server 127.0.0.1:8002;
	sticky cookie srv_id expires=1h;

}

server {


        listen 443 ssl;

	#Configuring SSL Termination
        ssl_certificate www.example.com.crt; 
        ssl_certificate_key www.example.com.key; 
        ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1; 
        ssl_prefer_server_ciphers on; 



        location /api/f1/drivers {
        proxy_pass http://f1-api;
	
	#Rate-Limit applied as below
        limit_req zone=perip nodelay;
        limit_req_status 429;                 

        }

        location /api/f1/seasons {
        proxy_pass http://f1-api;

        }

        location ~ /api/f1/[12][0-9]+ {
        proxy_pass http://f1-api;

        }



        location = /api/f1/circuits {
      
	# Configuring JWT Authentication
	    auth_jwt on;
	    auth_jwt_key_file api_secret.jwk;
	    
	# JWT Authentication Logs
	access_log  /var/log/nginx/jwt.access.log jwt;

	# Configuring JWT Autorization

        if ( $jwt_claim_uid = 222 ) {
            add_header X-jwt-claim-uid "$jwt_claim_uid" always;
            add_header X-jwt-status "Redirected to Backend-API" always;
	    
		        proxy_pass http://f1-api;
        }

        if ( $jwt_claim_uid != 222 ) {
            add_header X-jwt-claim-uid "$jwt_claim_uid" always;
            add_header X-jwt-status "Invalid user, no redirect" always;
	          return 200 "Not Authorized to Access";
        	}
	

        }
}
